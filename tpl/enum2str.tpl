<script type="text/javascript">
//<!--

function covert_enum ()
{
	var input = my_getbyid ('input_text').value + '\n';
	
	if (!input.replace(/\s/g,''))
	{
		return print_error('Empty input string');
	}
	
	var enum_name = 'enum';
	
	var rg, rg_res;
	// 1. Remove any comments 
	input = input.replace(/\/\*.*\*\//gim, '');
	input = input.replace(/\/\/.*\n/gim, '');
	input = input.replace(/\n/gim, ' ');
	input = input.replace(/\s+/gim, ' ');
	input = input.replace(/\s*,\s*/gim, ',');
	
	// 2. Has enum header?
	rg = /.*enum(\s+\w+)?\s*{/gim;
	rg_res = rg.exec(input);
	if (rg_res)
	{
		if (rg_res[1])
		{
			enum_name = rg_res[1];
			enum_name = enum_name.replace(/\s/g, '');
		}
	} else {
		rg = /.*{/gim;
		if (rg.test(input))
		{
			return print_error('Error parsing enum header. Copy only contents of enum (data inside { ... })');
		}
	}
	input = input.replace(/.*enum(\s+\w+)?\s*{\s*/gim, '');
	input = input.replace(/\s*}.*/gim, '');
	
	// Parse values
	input_data = input.split(',');
	input_out = [];
	
	var rg_val = /(\w+)\s*=\s*(.*)/;
	var rg_trim = /\s+/;
	for (x in input_data)
	{
		enumval = input_data[x];
		enumval_c = enumval;
		enumval_t = '';
		enumvals = rg_val.exec(enumval);
		if (enumvals)
		{
			enumval_c = enumvals[1];
			enumval_t = ' // ' + enumvals[2];
		}
		
		enumval_c = enumval_c.replace(rg_trim, '');
		if (enumval_c)
		{
			input_out[input_out.length] = '\t\tcase ' + enumval_c + ':\tout = "' + enumval_c + '"; break;' + enumval_t;
		}
	}
	
	var out = '';
	
	out += '/* Generated by enum2str tool. {{$url}} */\n';
	
	if (enum_name)
	{
		out += 'const char * print_' + enum_name + '(const ' + enum_name + ' value)\n';
		out += '{\n';
	}
	
	out += '\tconst char * out = "UNKNOWN";\n';
	out += '\tswitch(value)\n';
	out += '\t{\n';
	out += input_out.join('\n') + '\n';
	out += '\t}\n';
	out += '\treturn out;\n';
	
	if (enum_name)
	{
		out += '}\n';
	}
	
	my_getbyid('result').innerHTML = '<pre>' + out + '</pre>';
}

function print_error(msg)
{
	my_getbyid('result').innerHTML = '<p style="color:red;"><b>Error:</b> ' + msg + '</p>';
}

//-->
</script>
<p class="par">
	This tool can convert C++ enum to string. switch (value) that returns text name of enum value.
	Just copy <b>ONE</b> enum block to textarea and press <b>Convert</b> (only enum data of full enum def may be provided).
</p>

<table cellpadding="3" cellspacing="0" width="100%">
<tr>
	<td class="s1_title_p">Enum to process</td>
</tr>
<tr>
	<td class="s1_text" align="left">
		<textarea id="input_text" name="input_text" style="width:100%" rows="8" cols="40">enum some_network_enum
{
	NETWORK_STATUS_DOWN,
	NETWORK_STATUS_CONNECTED,
	NETWORK_STATUS_CONNECTING = 500, // This is good enum
	NETWORK_STATUS_ERROR
}; // Some other comment</textarea>
	</td>
</tr>
<tr>
<td align="center">
	<input type="button" onclick="covert_enum();" class="btn" value=" Convert " />
</td>
</tr>
</table>

<table cellpadding="3" cellspacing="0" width="100%">
<tr>
	<td class="s1_title_p" >Result</td>
</tr>
<tr>
	<td class="s1_text" id="result" align="left">
		<p>Copy enum def into textarea and press <b>Convert</b> button.</p>
	</td>
</tr>
</table>

<script type="text/javascript">
//<!--
// Set current on load
covert_enum();
//-->
</script>